out <- tryCatch({
ss_use <- ss_list[[s]] %>%
filter(!is.na(pop_tot_2011))
## Check if sample is East or West
if (str_detect(ss_labs[s], "east|west|West|East")) {
covs_alt <- setdiff(covs, 'east')
cov_form_alt <- as.formula(paste0('~', paste0(covs_alt, collapse = '+')))
}
## No Covars
out_nocov <- did::att_gt(yname = x,
tname = 'year',
gname = t,
idname = 'id',
data = ss_use,
allow_unbalanced_panel = F)
## Lag lead
out_ll_nocov <- did::aggte(out_nocov, type = 'dynamic',
na.rm = T,
balance_e = 3,
min_e = -4,
max_e = 4)
p <- out_ll_nocov$egt
coef <- out_ll_nocov$att.egt
se <- out_ll_nocov$se.egt
o1 <- data.frame(period = p, coef = coef, se = se, outcome = x,
treatment = t,
ss = ss_labs[s],
covars = 'No Covars')
## Covars
out_cov <- did::att_gt(yname = x,
tname = 'year',
gname = t,
idname = 'id',
data = ss_use,
xformla = ~pop_tot_2011 + pop_change_l1,
allow_unbalanced_panel = F)
## Lag lead
out_ll_cov <- did::aggte(out_cov, type = 'dynamic',
na.rm = T,
balance_e = 3,
min_e = -4,
max_e = 4)
p <- out_ll_cov$egt
coef <- out_ll_cov$att.egt
se <- out_ll_cov$se.egt
o2 <- data.frame(period = p, coef = coef, se = se, outcome = x,
treatment = t,
ss = ss_labs[s],
covars = 'Covars (Pop + pop change)')
## Covars V2
## This depends whether we look at East or West as a subset
if (str_detect(ss_labs[s], "east|west|West|East")) {
out_cov_v2 <- did::att_gt(yname = x,
tname = 'year',
gname = t,
idname = 'id',
data = ss_use,
xformla = cov_form_alt,
allow_unbalanced_panel = F)
} else {
out_cov_v2 <- did::att_gt(yname = x,
tname = 'year',
gname = t,
idname = 'id',
data = ss_use,
xformla = cov_form,
allow_unbalanced_panel = F)
}
## Lag lead
out_ll_cov_v2 <- did::aggte(out_cov_v2, type = 'dynamic',
na.rm = T,
balance_e = 3,
min_e = -4,
max_e = 4)
p <- out_ll_cov_v2$egt
coef <- out_ll_cov_v2$att.egt
se <- out_ll_cov_v2$se.egt
o3 <- data.frame(period = p, coef = coef, se = se, outcome = x,
treatment = t,
ss = ss_labs[s],
covars = 'Covars (additional)')
## Combine
out_final <- rbind(o1, o2, o3)
out_final
},
error = function(e) {stop(e)})
if (is.null(out)) {
cat(x, t, s)
stop(paste0(x, ', ', t, ', ', s))
} else {
out_final
}
}, cl = cl) %>% reduce(rbind)
parallel::stopCluster(cl)
##
## ##
rm(list = ls())
##
gwz <- read_rds("Data/GWZ_Clean.rds") %>%
filter(!year > 2019) %>%
filter(year > 1989) %>%
filter(!is.na(any_mieter)) %>%
mutate(state = substr(ags_8dig, 1, 2)) %>%
mutate(east = ifelse(as.numeric(state) > 11, 1, 0))
## State FE
gwz <- gwz %>%
fastDummies::dummy_cols(select_columns = 'state', ignore_na = T)
##
check_var_entries <- gwz %>%
filter(!is.na(any_mieter)) %>%
arrange(ags_8dig, year) %>%
group_by(ags_8dig) %>%
summarise(across(matches('any_mieter'),
~ifelse(first(. == 0) & any(. == 1), 1, 0))) %>%
ungroup() %>%
summarise(across(matches('any_mieter'),
~(sum(. == 1))))
# View(gwz %>% dplyr::select(ags_8dig, year, any_mieter))
# sum(is.na(gwz$any_mieter))
check_var_entries %>% dplyr::select(any_mieter)
## Def outcomes
olist <- c("new_flats_corporate_capita",
"new_flats_corporate_share")
## Plot
pd <- position_dodge(0.4)
#### Do the same with the subcategories (any) ####
cvars <- gwz %>%
colnames() %>%
str_filter('any') %>%
str_filter(c('mieter') %>%
paste0(collapse = '|'))
#### Callaway Santanna ####
gwz <- gwz %>%
dplyr::select(ags_8dig, year, cvars, olist, pop_tot_2011,
pop_change_l1, pop_density_complete, pop_change_l5,
pop_change_l1_v2,
matches('state'), east)
df_cs <- gwz %>%
arrange(ags_8dig, year) %>%
group_by(ags_8dig) %>%
mutate(across(one_of(cvars),
~ifelse(!all(. > 0),
ifelse(all(.==0), 0 ,
min(year[. != 0])),
1990),
.names = '{.col}_fp')) %>%
ungroup() %>%
mutate(id = as.numeric(factor(ags_8dig)))
## Quick check - what places are these
p_check <- df_cs %>%
dplyr::select(matches("fp"), ags_8dig, pop_tot_2011) %>%
distinct(ags_8dig, .keep_all = T) %>%
pivot_longer(cols = -c(pop_tot_2011, ags_8dig)) %>%
group_by(name, value) %>%
summarise(m = mean(pop_tot_2011, na.rm = T)) %>%
mutate(value = as.character(value)) %>%
ggplot(aes(value, m)) +
geom_point() +
facet_wrap(~name) +
theme_hanno() +
haschaR::x_axis_90deg()
p_check
## How many per year
p_check2 <- df_cs %>%
dplyr::select(matches("fp"), ags_8dig) %>%
distinct(ags_8dig, .keep_all = T) %>%
pivot_longer(cols = -c(ags_8dig)) %>%
group_by(name, value) %>%
summarise(n = n()) %>%
mutate(value = as.character(value)) %>%
filter(!value %in% c('0', '1990')) %>%
ggplot(aes(value, n)) +
geom_point() +
facet_wrap(~name) +
theme_hanno() +
haschaR::x_axis_90deg() +
xlab("Year of first verein entry") +
ylab("Number of munis")
p_check2
p_check2 <- df_cs %>%
dplyr::select(matches("fp"), ags_8dig) %>%
distinct(ags_8dig, .keep_all = T) %>%
pivot_longer(cols = -c(ags_8dig)) %>%
group_by(name, value) %>%
summarise(n = n()) %>%
mutate(value = as.character(value)) %>%
filter(!value %in% c('0', '1990'))
p_check2 %>% filter(name == 'any_mieter_fp') %>%
pull(n) %>% sum()
## Let's just use as is for now
## ##
treatments <- cvars %>%
paste0("_fp")
## Scale all outcomes
df_cs <- df_cs %>%
mutate(across(olist, scale, .names = '{.col}_scaled'))
## Add to outcomes
use_scaled = 0
if (use_scaled) {
olist <- olist %>%
c(paste0(olist, '_scaled'))
}
## Declare covars and formula
state_covs <- colnames(df_cs) %>%
str_filter('state') %>%
str_filter('_', neg = F)
covs <- c("pop_tot_2011", "pop_change_l1_v2", "east")
cov_form <- as.formula(paste0('~', paste0(covs, collapse = '+')))
## Create samples
ss_list <- list(df_cs,
df_cs %>%
filter(pop_tot_2011 > 10000),
df_cs %>%
filter(pop_tot_2011 > 20000),
df_cs %>% filter(year > 1999),
df_cs %>% filter(east == 0),
df_cs %>% filter(east == 1))
ss_id <- seq_along(ss_list)
ss_labs <- c("1 full", '2 above 10k', '3 above 20k',
"4 2000 and later", "5 only West", "6 only east")
x <- olist[1]
t <- treatments[1]
s = 5
i = 9
## EG
df_ex <- expand.grid(x = olist, t = treatments, s = ss_id, stringsAsFactors = F)
## We need parallel
library(parallel)
cl <- makeCluster(8)
parallel::clusterEvalQ(cl, {library(tidyverse); library(did)})
parallel::clusterExport(cl, c("df_cs", "olist", "treatments",
"ss_id", "ss_list", "ss_labs",
"cov_form", "df_ex", "covs"))
out_big <- pblapply(1:nrow(df_ex), function(i) {
x <- df_ex$x[i]
t <- df_ex$t[i]
s <- df_ex$s[i]
## Wrap in try
out <- tryCatch({
ss_use <- ss_list[[s]] %>%
filter(!is.na(pop_tot_2011))
## Check if sample is East or West
if (str_detect(ss_labs[s], "east|west|West|East")) {
covs_alt <- setdiff(covs, 'east')
cov_form_alt <- as.formula(paste0('~', paste0(covs_alt, collapse = '+')))
}
## No Covars
out_nocov <- did::att_gt(yname = x,
tname = 'year',
gname = t,
idname = 'id',
data = ss_use,
allow_unbalanced_panel = F)
## Lag lead
out_ll_nocov <- did::aggte(out_nocov, type = 'dynamic',
na.rm = T,
balance_e = 3,
min_e = -4,
max_e = 4)
p <- out_ll_nocov$egt
coef <- out_ll_nocov$att.egt
se <- out_ll_nocov$se.egt
o1 <- data.frame(period = p, coef = coef, se = se, outcome = x,
treatment = t,
ss = ss_labs[s],
covars = 'No Covars')
## Covars
out_cov <- did::att_gt(yname = x,
tname = 'year',
gname = t,
idname = 'id',
data = ss_use,
xformla = ~pop_tot_2011 + pop_change_l1,
allow_unbalanced_panel = F)
## Lag lead
out_ll_cov <- did::aggte(out_cov, type = 'dynamic',
na.rm = T,
balance_e = 3,
min_e = -4,
max_e = 4)
p <- out_ll_cov$egt
coef <- out_ll_cov$att.egt
se <- out_ll_cov$se.egt
o2 <- data.frame(period = p, coef = coef, se = se, outcome = x,
treatment = t,
ss = ss_labs[s],
covars = 'Covars (Pop + pop change)')
## Covars V2
## This depends whether we look at East or West as a subset
if (str_detect(ss_labs[s], "east|west|West|East")) {
out_cov_v2 <- did::att_gt(yname = x,
tname = 'year',
gname = t,
idname = 'id',
data = ss_use,
xformla = cov_form_alt,
allow_unbalanced_panel = F)
} else {
out_cov_v2 <- did::att_gt(yname = x,
tname = 'year',
gname = t,
idname = 'id',
data = ss_use,
xformla = cov_form,
allow_unbalanced_panel = F)
}
## Lag lead
out_ll_cov_v2 <- did::aggte(out_cov_v2, type = 'dynamic',
na.rm = T,
balance_e = 3,
min_e = -4,
max_e = 4)
p <- out_ll_cov_v2$egt
coef <- out_ll_cov_v2$att.egt
se <- out_ll_cov_v2$se.egt
o3 <- data.frame(period = p, coef = coef, se = se, outcome = x,
treatment = t,
ss = ss_labs[s],
covars = 'Covars (additional)')
## Combine
out_final <- rbind(o1, o2, o3)
out_final
},
error = function(e) {stop(e)})
if (is.null(out)) {
cat(x, t, s)
stop(paste0(x, ', ', t, ', ', s))
} else {
out_final
}
}, cl = cl) %>% reduce(rbind)
parallel::stopCluster(cl)
##
load("C:/Users/hanno/Downloads/0_Data/censusvillageacroads.Rdata")
censusvillageacroads$pmgsyroad<-0
censusvillageacroads$pmgsyroad[censusvillageacroads$roadcode>0 & is.na(censusvillageacroads$roadcode)==FALSE]<-1
table(censusvillageacroads$pmgsyroad)
censusvillageacroads$pmgsyroad2008<-0
censusvillageacroads$pmgsyroad2008[censusvillageacroads$roadsanction_period=="t01"|censusvillageacroads$roadsanction_period=="t12"]<-1
table(censusvillageacroads$pmgsyroad2008)
censusvillageacroads$villagepop<-censusvillageacroads$pc01_vd_t_p
censusvillageacroads$popcutoff1000<-censusvillageacroads$pc01_vd_t_p - 1000
censusvillageacroads$popcutoff500<-censusvillageacroads$pc01_vd_t_p - 500
table(censusvillageacroads$pc01_vd_app_pr)
#censusvillageacroads<-subset(censusvillageacroads,censusvillageacroads$popcutoff1000>=-1000 & censusvillageacroads$popcutoff1000<=1000 )
#censusvillageacroads<-subset(censusvillageacroads, censusvillageacroads$pc01_vd_app_pr==0)
census84<-subset(censusvillageacroads,censusvillageacroads$popcutoff500>=-84 & censusvillageacroads$popcutoff500<=84 & pc01_vd_app_pr==0)
summary(rdrobust(census84$pmgsyroad,census84$popcutoff500))
library(rdrobust)
load("/Users/tg2778/Library/Mobile Documents/com~apple~CloudDocs/Documents/Nuffield/DPhil PROJECT/00_DATA/4_Roads/1_posted/censusvillageacroads.Rdata")
censusvillageacroads$pmgsyroad<-0
censusvillageacroads$pmgsyroad[censusvillageacroads$roadcode>0 & is.na(censusvillageacroads$roadcode)==FALSE]<-1
table(censusvillageacroads$pmgsyroad)
censusvillageacroads$pmgsyroad2008<-0
censusvillageacroads$pmgsyroad2008[censusvillageacroads$roadsanction_period=="t01"|censusvillageacroads$roadsanction_period=="t12"]<-1
table(censusvillageacroads$pmgsyroad2008)
censusvillageacroads$villagepop<-censusvillageacroads$pc01_vd_t_p
censusvillageacroads$popcutoff1000<-censusvillageacroads$pc01_vd_t_p - 1000
censusvillageacroads$popcutoff500<-censusvillageacroads$pc01_vd_t_p - 500
table(censusvillageacroads$pc01_vd_app_pr)
census84<-subset(censusvillageacroads,censusvillageacroads$popcutoff500>=-84 & censusvillageacroads$popcutoff500<=84 & pc01_vd_app_pr==0)
summary(rdrobust(census84$pmgsyroad,census84$popcutoff500))
rdplot(census84$pmgsyroad,census84$popcutoff500, binselect="esmv",
x.lim=c(-100,100), masspoints="adjust", x.label=c("Normalized population"),
y.label =c("PMGSY connectivity by 2018"), title="")
ggplot(census84, aes(popcutoff500, pmgsyroad, popcutoff500 > 0)) +
geom_smooth(aes(group = popcutoff500 > 9999), se = F, color = 'black') +
geom_vline(xintercept = 0, linetype = 'dotted') +
ylab('Y') +
xlab('X') +
theme_bw()
library(tidyverse)
ggplot(census84, aes(popcutoff500, pmgsyroad, popcutoff500 > 0)) +
geom_smooth(aes(group = popcutoff500 > 9999), se = F, color = 'black') +
geom_vline(xintercept = 0, linetype = 'dotted') +
ylab('Y') +
xlab('X') +
theme_bw()
ggplot(census84, aes(popcutoff500, pmgsyroad, popcutoff500 > 0)) +
geom_smooth(aes(group = popcutoff500 > 0), se = F, color = 'black') +
geom_vline(xintercept = 0, linetype = 'dotted') +
ylab('Y') +
xlab('X') +
theme_bw()
rdplot(census84$pmgsyroad,census84$popcutoff500, binselect="esmv",
x.lim=c(-100,100), masspoints="adjust", x.label=c("Normalized population"),
y.label =c("PMGSY connectivity by 2018"), title="")
ggplot(census84, aes(popcutoff500, pmgsyroad, popcutoff500 > 0)) +
geom_smooth(aes(group = popcutoff500 > 0), se = F, color = 'black', span = 0.5) +
geom_vline(xintercept = 0, linetype = 'dotted') +
ylab('Y') +
xlab('X') +
theme_bw()
ggplot(census84, aes(popcutoff500, pmgsyroad, popcutoff500 > 0)) +
geom_smooth(aes(group = popcutoff500 > 0), se = F, color = 'black',
span = 0.1) +
geom_vline(xintercept = 0, linetype = 'dotted') +
ylab('Y') +
xlab('X') +
theme_bw()
ggplot(census84, aes(popcutoff500, pmgsyroad, popcutoff500 > 0)) +
geom_smooth(aes(group = popcutoff500 > 0), se = F, color = 'black',
span = 2) +
geom_vline(xintercept = 0, linetype = 'dotted') +
ylab('Y') +
xlab('X') +
theme_bw()
p1
ggplot(census84, aes(popcutoff500, pmgsyroad, popcutoff500 > 0)) +
geom_smooth(aes(group = popcutoff500 > 0), se = F, color = 'black',
span = 0.00001) +
geom_vline(xintercept = 0, linetype = 'dotted') +
ylab('Y') +
xlab('X') +
theme_bw()
ggplot(census84, aes(popcutoff500, pmgsyroad, popcutoff500 > 0)) +
geom_smooth(aes(group = popcutoff500 > 0), se = F, color = 'black',
span = 0.1, method = 'loess') +
geom_vline(xintercept = 0, linetype = 'dotted') +
ylab('Y') +
xlab('X') +
theme_bw()
ggplot(census84, aes(popcutoff500, pmgsyroad, popcutoff500 > 0)) +
geom_smooth(aes(group = popcutoff500 > 0), se = F, color = 'black',
span = 1, method = 'loess') +
geom_vline(xintercept = 0, linetype = 'dotted') +
ylab('Y') +
xlab('X') +
theme_bw()
p1
ggplot(census84, aes(popcutoff500, pmgsyroad, popcutoff500 > 0)) +
geom_smooth(aes(group = popcutoff500 > 0), se = F, color = 'black',
span = 3, method = 'loess') +
geom_vline(xintercept = 0, linetype = 'dotted') +
ylab('Y') +
xlab('X') +
theme_bw()
p1
ggplot(census84, aes(popcutoff500, pmgsyroad, popcutoff500 > 0)) +
geom_smooth(aes(group = popcutoff500 > 0), se = F, color = 'black',
span = 2, method = 'loess') +
geom_vline(xintercept = 0, linetype = 'dotted') +
ylab('Y') +
xlab('X') +
theme_bw()
p1 <- ggplot(census84, aes(popcutoff500, pmgsyroad, popcutoff500 > 0)) +
geom_smooth(aes(group = popcutoff500 > 0), se = F, color = 'black',
span = 1.5, method = 'loess') +
geom_vline(xintercept = 0, linetype = 'dotted') +
ylab('Y') +
xlab('X') +
theme_bw()
p1
p1 <- ggplot(census84, aes(popcutoff500, pmgsyroad, popcutoff500 > 0)) +
stat_summary_bin(aes(group = popcutoff500 > 0), geom = 'point', fun = 'mean') +
geom_smooth(aes(group = popcutoff500 > 0), se = F, color = 'black',
span = 1, method = 'loess') +
geom_vline(xintercept = 0, linetype = 'dotted') +
ylab('Y') +
xlab('X') +
theme_bw()
p1
p1 <- ggplot(census84, aes(popcutoff500, pmgsyroad, popcutoff500 > 0)) +
stat_summary_bin(aes(group = popcutoff500 > 0), geom = 'point', fun = 'mean') +
geom_smooth(aes(group = popcutoff500 > 0), se = T, color = 'black',
span = 1, method = 'loess') +
geom_vline(xintercept = 0, linetype = 'dotted') +
ylab('Y') +
xlab('X') +
theme_bw()
p1
devtools::install_github("crubba/bundestagswahl")
install.packages("rlang")
install.packages("rlang")
devtools::install_github("crubba/bundestagswahl")
install.packages('cli')
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
devtools::install_github("crubba/bundestagswahl")
##
pacman::p_load(tidyverse, lfe,
haschaR,
readstata13, stargazer,
data.table,
readxl, tidyverse,
pbapply,
tidytext,
SnowballC,
tm,
data.table,labelled, stringdist,
deeplr)
library(devtools)
install.packages("languageserver")
install.packages("languageserver")
install.packages("languageserver")
install.packages("httpgd")
install.packages("httpgd")
install.packages('cli')
library(devtools)
library(roxygen2)
rm(list = ls())
## Declare WDs
wd_h <- '/Users/hanno/Local_Projects/haschaR/'
wd_s <- '/Users/saschariaz/Google\ Drive_Harvard/Git/haschaR'
## Set WD
haschaR::detect_wd(wd_h = wd_h, wd_alt = wd_s, user_name = 'Hanno')
document()
devtools::install_github('hhilbig/haschaR',
upgrade = T, force = T, quiet = T)

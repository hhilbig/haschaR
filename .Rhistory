res_femshare <- df %>%
group_by(party, elec_year) %>%
nest() %>%
mutate(fit = map(data, ~ lm(safe_seat ~ full_time_share, data = .x)),
tidied = map(fit, broom::tidy)) %>%
unnest(tidied) %>%
ungroup() %>%
filter(!str_detect(term, 'Intercept'))
res_index_p <- df %>%
group_by(party) %>%
nest() %>%
mutate(fit = map(data, ~ lm(safe_seat ~ gender_index + factor(state),
data = .x)),
tidied = map(fit, broom::tidy)) %>%
unnest(tidied) %>%
ungroup() %>%
filter(!str_detect(term, 'Intercept|state|year'))%>%
mutate(elec_year = 'Pooled')
res_wagegap_p <- df %>%
group_by(party) %>%
nest() %>%
mutate(fit = map(data, ~ lm(safe_seat ~ paygap_2009 + factor(state), data = .x)),
tidied = map(fit, broom::tidy)) %>%
unnest(tidied) %>%
ungroup() %>%
filter(!str_detect(term, 'Intercept|state|year'))%>%
mutate(elec_year = 'Pooled')
res_femshare_p <- df %>%
group_by(party) %>%
nest() %>%
mutate(fit = map(data, ~ lm(safe_seat ~ full_time_share+ factor(state), data = .x)),
tidied = map(fit, broom::tidy)) %>%
unnest(tidied) %>%
ungroup() %>%
filter(!str_detect(term, 'Intercept|state|year')) %>%
mutate(elec_year = 'Pooled')
## Combine
res_final_comp <- bind_rows(res_wagegap, res_femshare, res_index,
res_femshare_p, res_index_p, res_wagegap_p) %>%
dplyr::select(-data, -fit) %>%
mutate(party = dplyr::recode(party, `spd` = 'SPD',
`left` = 'Left',
`greens` = 'Greens',
`cdu_csu` = 'CDU/CSU',
`fdp` = 'FDP')) %>%
mutate(term = dplyr::recode(term,
`full_time_share` = 'Share of women in\nfull time employment (2013)',
`gender_index` = 'Gender equality\nindex (2013)',
`paygap_2009` = 'Gender pay gap - higher values \nmean women earn more (2009)')) %>%
mutate(elec_year = paste0(elec_year, ' election')) %>%
mutate(elec_year = dplyr::recode(elec_year, `Pooled election` = 'Pooled'))
## Plot
pd <- position_dodge(0.4)
p1 <- res_final_comp %>%
mutate(elec_year = as.character(elec_year)) %>%
ggplot(aes(x = party, y = estimate)) +
geom_hline(yintercept = 0, linetype = 'dotted') +
geom_errorbar(aes(ymin = estimate - 1.96*std.error,
ymax = estimate + 1.96*std.error),
position = pd,
width = 0) +
geom_point(position = pd) +
theme_hanno()+
facet_grid(elec_year~term) +
coord_flip() +
theme(axis.title.y = element_blank()) +
ylab('Change in P(Safe district for party) for 1SD change in exp. var') +
ggtitle('Gender equality and district competitiveness')
p1
rm(list  = ls())
##
source('02_Code/99_AllUnits_Group.R')
## Gender wage gap
df <- read_rds('01_Data/07_GenderEquality/Data.rds') %>%
mutate(safe_seat = ifelse(competitiveness > 0.10, 1 ,0)) %>%
mutate(elec_year = as.character(elec_year))
## ## ## ## By year ##
df <- df %>%
dplyr::select(safe_seat, elec_year, party, gender_index, paygap_2009)
## Correlation by year
df <- df %>%
group_by(elec_year, party) %>%
summarise(c = cor(gender_index, safe_seat, use = 'complete.obs'))
df <- df %>%
group_by(elec_year, party) %>%
summarise(c = cor(gender_index, safe_seat, use = 'complete.obs')) %>%
ungroup()
rm(list  = ls())
##
source('02_Code/99_AllUnits_Group.R')
## Gender wage gap
df <- read_rds('01_Data/07_GenderEquality/Data.rds') %>%
mutate(safe_seat = ifelse(competitiveness > 0.10, 1 ,0)) %>%
mutate(elec_year = as.character(elec_year))
## ## ## ## By year ##
df <- df %>%
dplyr::select(safe_seat, elec_year, party, gender_index, paygap_2009)
## Correlation by year
out <- df %>%
group_by(elec_year, party) %>%
summarise(c = cor(gender_index, safe_seat, use = 'complete.obs')) %>%
ungroup()
View(out)
rm(list  = ls())
##
source('02_Code/99_AllUnits_Group.R')
## Gender wage gap
df <- read_rds('01_Data/07_GenderEquality/Data.rds') %>%
mutate(safe_seat = ifelse(competitiveness > 0.10, 1 ,0)) %>%
mutate(elec_year = as.character(elec_year)) %>%
filter(party %in% c('cdu_csu', 'spd'))
## ## ## ## By year ##
df <- df %>%
dplyr::select(safe_seat, elec_year, party, gender_index, paygap_2009)
out <- df %>%
group_by(elec_year, party) %>%
summarise(c = cor(gender_index, safe_seat, use = 'complete.obs')) %>%
ungroup()
View(out)
rm(list  = ls())
library(sf)
## Gender wage gap
wg <- read_csv('01_Data/07_GenderEquality/genderpaygap_elec_districs.csv') %>%
distinct(elec_district, .keep_all = T)
## Index
index <- read_excel('01_Data/07_GenderEquality/BBSR_Index1.xlsx') %>%
dplyr::select(2,4, 10) %>%
slice(-1:-4) %>%
rename(ags = 1, gender_index = 2, full_time_share = 3) %>%
mutate(ags = as.character(ags), gender_index = as.numeric(gender_index),
full_time_share = as.numeric(full_time_share)) %>%
mutate(ags = ifelse(nchar(ags) == 7, paste0('0', ags), ags)) %>%
filter(nchar(ags) == 8)
## SF
dis13 <- sf::st_read("01_Data/08_Shapefiles/01_BTW13/Geometrie_Wahlkreise_18DBT.shp") %>%
dplyr::select(WKR_NR)
krs <- sf::st_read("01_Data/08_Shapefiles/04_Counties/vg250_krs.shp") %>%
dplyr::select(AGS)
dis13 <- st_transform(dis13, crs = sf::st_crs(krs))
## Overlay
ints <- dis13 %>%
st_intersection(krs)
ints$area <- st_area(ints) %>% as.numeric()
int_df <- ints
int_df$geometry <- NULL
## Use this got get weighted means based on area
df_final <- int_df %>%
left_join(index, by = c('AGS' = 'ags')) %>%
group_by(WKR_NR) %>%
summarise(gender_index = weighted.mean(gender_index, area),
full_time_share = weighted.mean(full_time_share, area))
## Add wage
df_final <- df_final %>%
rename(elec_district = WKR_NR) %>%
left_join(wg) %>%
mutate_at(vars(-elec_district),
list(~(. - mean(., na.rm = T)) / sd(., na.rm = T)))
## Get main data file
source('02_Code/99_AllUnits_Group.R')
df_elec <- read_rds('01_Data/01_Electoral_Results/GE_1980_2017_districts.rds') %>%
filter(elec_year > 1982) %>%
mutate(female2 = ifelse(female == 1, T, F)) %>%
filter(!is.na(female2)) %>%
add_all_units(group_var = 'party', new_group_id = 'All 6 parties') %>%
dplyr::select(elec_district, elec_year, party, female, competitiveness, state) %>%
filter(elec_year > 2012) %>%
mutate(elec_district = as.numeric(elec_district)) %>%
left_join(df_final)
rm(list  = ls())
library(sf)
## Gender wage gap
wg <- read_csv('01_Data/07_GenderEquality/genderpaygap_elec_districs.csv') %>%
distinct(elec_district, .keep_all = T)
## Index
index <- read_excel('01_Data/07_GenderEquality/BBSR_Index1.xlsx') %>%
dplyr::select(2,4, 10) %>%
slice(-1:-4) %>%
rename(ags = 1, gender_index = 2, full_time_share = 3) %>%
mutate(ags = as.character(ags), gender_index = as.numeric(gender_index),
full_time_share = as.numeric(full_time_share)) %>%
mutate(ags = ifelse(nchar(ags) == 7, paste0('0', ags), ags)) %>%
filter(nchar(ags) == 8)
## SF
dis13 <- sf::st_read("01_Data/08_Shapefiles/01_BTW13/Geometrie_Wahlkreise_18DBT.shp") %>%
dplyr::select(WKR_NR)
krs <- sf::st_read("01_Data/08_Shapefiles/04_Counties/vg250_krs.shp") %>%
dplyr::select(AGS)
dis13 <- st_transform(dis13, crs = sf::st_crs(krs))
## Overlay
ints <- dis13 %>%
st_intersection(krs)
ints$area <- st_area(ints) %>% as.numeric()
int_df <- ints
int_df$geometry <- NULL
## Use this got get weighted means based on area
df_final <- int_df %>%
left_join(index, by = c('AGS' = 'ags')) %>%
group_by(WKR_NR) %>%
summarise(gender_index = weighted.mean(gender_index, area),
full_time_share = weighted.mean(full_time_share, area))
## Add wage
df_final <- df_final %>%
rename(elec_district = WKR_NR) %>%
left_join(wg) %>%
mutate_at(vars(-elec_district),
list(~(. - mean(., na.rm = T)) / sd(., na.rm = T)))
## Get main data file
source('02_Code/99_AllUnits_Group.R')
df_elec <- read_rds('01_Data/01_Electoral_Results/GE_1980_2017_districts.rds') %>%
filter(elec_year > 1982) %>%
mutate(female2 = ifelse(female == 1, T, F)) %>%
filter(!is.na(female2)) %>%
add_all_units(group_var = 'party', new_group_id = 'All 6 parties') %>%
dplyr::select(elec_district, elec_year, party, female, competitiveness, state) %>%
filter(elec_year > 2012) %>%
mutate(elec_district = as.numeric(elec_district)) %>%
left_join(df_final)
write_rds(df_elec, '01_Data/07_GenderEquality/Data.rds')
rm(list  = ls())
##
source('02_Code/99_AllUnits_Group.R')
## Gender wage gap
df <- read_rds('01_Data/07_GenderEquality/Data.rds') %>%
mutate(safe_seat = ifelse(competitiveness > 0.10, 1 ,0)) %>%
mutate(elec_year = as.character(elec_year)) %>%
filter(party %in% c('cdu_csu', 'spd'))
## ## ## ## By year ##
df <- df %>%
dplyr::select(safe_seat, elec_year, party, gender_index, paygap_2009)
out <- df %>%
group_by(elec_year, party) %>%
summarise(c = cor(gender_index, safe_seat, use = 'complete.obs')) %>%
ungroup()
View(out)
rm(list  = ls())
##
source('02_Code/99_AllUnits_Group.R')
## Gender wage gap
df <- read_rds('01_Data/07_GenderEquality/Data.rds') %>%
mutate(safe_seat = ifelse(competitiveness > 0.10, 1 ,0)) %>%
mutate(elec_year = as.character(elec_year)) %>%
filter(party %in% c('cdu_csu', 'spd'))
df <- df %>%
dplyr::select(safe_seat, elec_year, party, gender_index, paygap_2009)
out <- df %>%
group_by(elec_year, party) %>%
summarise(c = cor(gender_index, safe_seat, use = 'complete.obs')) %>%
ungroup()
library(tidyverse)
library(reshape2)
library(pbapply)
library(foreign)
library(xlsx)
library(stargazer)
library(haschaR)
library(latex2exp)
library(lfe)
library(knitr)
library(readxl)
library(viridis)
##
haschaR::detect_wd(wd_h = 'C:/Users/Hanno/Dropbox/Harvard/Projects/German elections',
wd_alt = '/Users/praffler/Dropbox/German elections',
user_name = 'Hanno', user_name2 = 'hah235',
wd_h2 = 'C:/Users/hah235/Dropbox/Harvard/Projects/German elections')
##
haschaR::auto_make_runall_file(code_directory = "02_Code/")
## 01 Cleanup
rm(list  = ls())
library(sf)
## Gender wage gap
wg <- read_csv('01_Data/07_GenderEquality/genderpaygap_elec_districs.csv') %>%
distinct(elec_district, .keep_all = T)
## Index
index <- read_excel('01_Data/07_GenderEquality/BBSR_Index1.xlsx') %>%
dplyr::select(2,4, 10) %>%
slice(-1:-4) %>%
rename(ags = 1, gender_index = 2, full_time_share = 3) %>%
mutate(ags = as.character(ags), gender_index = as.numeric(gender_index),
full_time_share = as.numeric(full_time_share)) %>%
mutate(ags = ifelse(nchar(ags) == 7, paste0('0', ags), ags)) %>%
filter(nchar(ags) == 8)
## SF
dis13 <- sf::st_read("01_Data/08_Shapefiles/01_BTW13/Geometrie_Wahlkreise_18DBT.shp") %>%
dplyr::select(WKR_NR)
krs <- sf::st_read("01_Data/08_Shapefiles/04_Counties/vg250_krs.shp") %>%
dplyr::select(AGS)
dis13 <- st_transform(dis13, crs = sf::st_crs(krs))
## Overlay
ints <- dis13 %>%
st_intersection(krs)
ints$area <- st_area(ints) %>% as.numeric()
int_df <- ints
int_df$geometry <- NULL
## Use this got get weighted means based on area
df_final <- int_df %>%
left_join(index, by = c('AGS' = 'ags')) %>%
group_by(WKR_NR) %>%
summarise(gender_index = weighted.mean(gender_index, area),
full_time_share = weighted.mean(full_time_share, area))
## Add wage
df_final <- df_final %>%
rename(elec_district = WKR_NR) %>%
left_join(wg) %>%
mutate_at(vars(-elec_district),
list(~(. - mean(., na.rm = T)) / sd(., na.rm = T)))
## Get main data file
source('02_Code/99_AllUnits_Group.R')
df_elec <- read_rds('01_Data/01_Electoral_Results/GE_1980_2017_districts.rds') %>%
filter(elec_year > 1982) %>%
mutate(female2 = ifelse(female == 1, T, F)) %>%
filter(!is.na(female2)) %>%
add_all_units(group_var = 'party', new_group_id = 'All 6 parties') %>%
dplyr::select(elec_district, elec_year, party, female, competitiveness, state) %>%
filter(elec_year > 2005) %>%
mutate(elec_district = as.numeric(elec_district)) %>%
left_join(df_final)
write_rds(df_elec, '01_Data/07_GenderEquality/Data.rds')
rm(list  = ls())
##
source('02_Code/99_AllUnits_Group.R')
## Gender wage gap
df <- read_rds('01_Data/07_GenderEquality/Data.rds') %>%
mutate(safe_seat = ifelse(competitiveness > 0.10, 1 ,0)) %>%
mutate(elec_year = as.character(elec_year)) %>%
filter(party %in% c('cdu_csu', 'spd'))
df <- df %>%
dplyr::select(safe_seat, elec_year, party, gender_index, paygap_2009)
out <- df %>%
group_by(elec_year, party) %>%
summarise(c = cor(gender_index, safe_seat, use = 'complete.obs')) %>%
ungroup()
View(out)
View(out)
party_orig <- list(c('spd', 'SPD'),
c('CDU', 'cdu', 'csu', 'c.s.u', 'christ'),
c('LINKE', 'linkspartei', 'pds', 'links',
'left'),
c('greens', 'Gruene', 'green'),
c('fdp', 'f.d.p.'),
c('AFD', 'afd', 'a.f.d.', 'alternative'))
party_destination <- c('SPD', 'CDU/CSU', 'Left', 'Greens', 'FDP', 'AfD')
test_vec <- c('csu', 'cdu', 'links', 'gruene', 'alternative fuer')
test_vec <- c('csu', 'cdu', 'links', 'gruene', 'alternative fuer')
party_orig <- list(c('spd', 'SPD'),
c('CDU', 'cdu', 'csu', 'c.s.u', 'christ'),
c('LINKE', 'linkspartei', 'pds', 'links',
'left'),
c('greens', 'Gruene', 'green'),
c('fdp', 'f.d.p.'),
c('AFD', 'afd', 'a.f.d.', 'alternative'))
party_destination <- c('SPD', 'CDU/CSU', 'Left', 'Greens', 'FDP', 'AfD')
test_vec <- c('csu', 'cdu', 'links', 'gruene', 'alternative fuer')
x <- test_vec[1]
p <- party_orig[[1]]
str_detect(x, paste0(p, collapse = '|'))
sapply(party_orig, function(p) {
str_detect(x, paste0(p, collapse = '|'))
}
}
sapply(party_orig, function(p) {
str_detect(x, paste0(p, collapse = '|'))
})
sapply(party_orig, function(p) {
str_detect(x, paste0(p, collapse = '|'))
}) %>%
party_destination[.]
test_vec <- c('csu', 'cdu', 'links', 'gruene', 'alternative fuer')
x <- test_vec[1]
p <- party_orig[[2]]
test_vec %>% sapply(function(x) {
sapply(party_orig, function(p) {
str_detect(x, paste0(p, collapse = '|'))
}) %>%
party_destination[.]
}
}
test_vec %>% sapply(function(x) {
sapply(party_orig, function(p) {
str_detect(x, paste0(p, collapse = '|'))
}) %>%
party_destination[.]
})
party_orig <- list(c('spd', 'SPD'),
c('CDU', 'cdu', 'csu', 'c.s.u', 'christ'),
c('LINKE', 'linkspartei', 'pds', 'links',
'left'),
c('greens', 'Gruene', 'green', 'gruen'),
c('fdp', 'f.d.p.'),
c('AFD', 'afd', 'a.f.d.', 'alternative'))
party_destination <- c('SPD', 'CDU/CSU', 'Left', 'Greens', 'FDP', 'AfD')
test_vec <- c('csu', 'cdu', 'links', 'gruene', 'alternative fuer')
x <- test_vec[1]
p <- party_orig[[2]]
german_party_convert <- function(party_vec) {
## Party origins and destinations
party_orig <- list(c('spd', 'SPD'),
c('CDU', 'cdu', 'csu', 'c.s.u', 'christ'),
c('LINKE', 'linkspartei', 'pds', 'links',
'left'),
c('greens', 'Gruene', 'green', 'gruen'),
c('fdp', 'f.d.p.'),
c('AFD', 'afd', 'a.f.d.', 'alternative'))
party_destination <- c('SPD', 'CDU/CSU', 'Left', 'Greens', 'FDP', 'AfD')
## Loop
party_vec %>% sapply(function(x) {
which_party <- sapply(party_orig, function(p) {
str_detect(x, paste0(p, collapse = '|'))
})
## If nothing found, return the original value
if (all(!which_party)) {
x
} else {
party_destination[which_party]
}
})
}
german_party_convert(test_vec)
test_vec <- c('csu', 'cdu', 'links', 'gruene', 'alternative fuer', 'lolpartei')
x <- test_vec[1]
p <- party_orig[[2]]
german_party_convert <- function(party_vec) {
## Party origins and destinations
party_orig <- list(c('spd', 'SPD'),
c('CDU', 'cdu', 'csu', 'c.s.u', 'christ'),
c('LINKE', 'linkspartei', 'pds', 'links',
'left'),
c('greens', 'Gruene', 'green', 'gruen'),
c('fdp', 'f.d.p.'),
c('AFD', 'afd', 'a.f.d.', 'alternative'))
party_destination <- c('SPD', 'CDU/CSU', 'Left', 'Greens', 'FDP', 'AfD')
## Loop
party_vec %>% sapply(function(x) {
which_party <- sapply(party_orig, function(p) {
str_detect(x, paste0(p, collapse = '|'))
})
## If nothing found, return the original value
if (all(!which_party)) {
x
} else {
party_destination[which_party]
}
})
}
party_orig <- list(c('spd', 'SPD'),
c('CDU', 'cdu', 'csu', 'c.s.u', 'christ'),
c('LINKE', 'linkspartei', 'pds', 'links',
'left'),
c('greens', 'Gruene', 'green', 'gruen'),
c('fdp', 'f.d.p.'),
c('AFD', 'afd', 'a.f.d.', 'alternative'))
party_destination <- c('SPD', 'CDU/CSU', 'Left', 'Greens', 'FDP', 'AfD')
test_vec <- c('csu', 'cdu', 'links', 'gruene', 'alternative fuer', 'lolpartei')
x <- test_vec[1]
p <- party_orig[[2]]
german_party_convert <- function(party_vec) {
## Party origins and destinations
party_orig <- list(c('spd', 'SPD'),
c('CDU', 'cdu', 'csu', 'c.s.u', 'christ'),
c('LINKE', 'linkspartei', 'pds', 'links',
'left'),
c('greens', 'Gruene', 'green', 'gruen'),
c('fdp', 'f.d.p.'),
c('AFD', 'afd', 'a.f.d.', 'alternative'))
party_destination <- c('SPD', 'CDU/CSU', 'Left', 'Greens', 'FDP', 'AfD')
## Loop
party_vec %>% sapply(function(x) {
which_party <- sapply(party_orig, function(p) {
str_detect(x, paste0(p, collapse = '|'))
})
## If nothing found, return the original value
if (all(!which_party)) {
x
} else {
party_destination[which_party]
}
})
}
german_party_convert(test_vec)
german_party_convert <- function(party_vec) {
## Party origins and destinations
party_orig <- list(c('spd', 'SPD'),
c('CDU', 'cdu', 'csu', 'c.s.u', 'christ'),
c('LINKE', 'linkspartei', 'pds', 'links',
'left'),
c('greens', 'Gruene', 'green', 'gruen'),
c('fdp', 'f.d.p.'),
c('AFD', 'afd', 'a.f.d.', 'alternative'))
party_destination <- c('SPD', 'CDU/CSU', 'Left', 'Greens', 'FDP', 'AfD')
## Loop
party_vec %>% sapply(function(x) {
which_party <- sapply(party_orig, function(p) {
str_detect(x, paste0(p, collapse = '|'))
})
## If nothing found, return the original value
if (all(!which_party)) {
x
} else {
party_destination[which_party]
}
}) %>% unname()
}
german_party_convert(test_vec)
library(devtools)
library(roxygen2)
rm(list = ls())
## Declare WDs
wd_h <- '/Users/hanno/Local_Projects/haschaR/'
wd_s <- '/Users/saschariaz/Google\ Drive_Harvard/Git/haschaR'
## Set WD
haschaR::detect_wd(wd_h = wd_h, wd_alt = wd_s, user_name = 'Hanno')
document()

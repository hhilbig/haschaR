axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
p1
## map together
p1 <- map_terrain_14 +
geom_sf(data = grids,
inherit.aes = FALSE,
color=alpha("red", 0.0), fill = NA) +
theme(axis.line = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
p1
attr(map_terrain_14, "bb")
p1
attr(map_terrain_14, "bb")
attr(map_terrain_14$data, 'out.attrs')$dimnames %>%
reduce(rbind) %>%
data.frame() %>%
mutate_all(list(~str_remove_all(., '[a-z]|='))) %>%
mutate_all(as.numeric)
ggsave(paste0(dir, '/terrain_14.png'), height = 10, width = 10)
pic.raster <- raster::stack(paste0(dir, '/terrain_14.png'))
names(pic.raster)<-c('r','g','b')
#Look at it
plotRGB(pic.raster)
pic.white<-pic.raster
pic.white$white_spots<-0
pic.white$white_spots[pic.white$r>250 &
pic.white$g>250 & pic.white$b>250] <- 1
plot(pic.white$white_spots)
ggsave(paste0(dir, '/terrain_14.png'), height = 10, width = 10)
## map together
p1 <- map_terrain_14 +
geom_sf(data = grids,
inherit.aes = FALSE,
color=alpha("red", 0.0), fill = NA) +
theme(axis.line = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
p1
attr(map_terrain_14, "bb")
attr(map_terrain_14$data, 'out.attrs')$dimnames %>%
reduce(rbind) %>%
data.frame() %>%
mutate_all(list(~str_remove_all(., '[a-z]|='))) %>%
mutate_all(as.numeric)
ggsave(p1, paste0(dir, '/terrain_14.png'), height = 10, width = 10)
ggsave(plot = p1, filename = paste0(dir, '/terrain_14.png'),
height = 10, width = 10)
pic.raster <- raster::stack(paste0(dir, '/terrain_14.png'))
names(pic.raster)<-c('r','g','b')
#Look at it
plotRGB(pic.raster)
pic.white<-pic.raster
pic.white$white_spots<-0
pic.white$white_spots[pic.white$r>250 &
pic.white$g>250 & pic.white$b>250] <- 1
plot(pic.white$white_spots)
raster::coordinates(pic_white)
out <- pic.white$white_spots %>% as.matrix()
rows_exclude <- out %>% apply(1, function(x) all(x == 1))
cols_exclude <- out %>% apply(2, function(x) all(x == 1))
out_matrix <- pic.white$white_spots %>% as.matrix()
rows_exclude <- out_matrix %>% apply(1, function(x) all(x == 1))
cols_exclude <- out_matrix %>% apply(2, function(x) all(x == 1))
out_matrix <- out_matrix[!rows_exclude, !cols_exclude]
attr(map_terrain_14$data, 'out.attrs')$dimnames
lon_min_max <- ll_range[1, ] %>% as.numeric()
lat_min_max <- ll_range[2, ] %>% as.numeric()
ll_range <- attr(map_terrain_14$data, 'out.attrs')$dimnames %>%
reduce(rbind) %>%
data.frame() %>%
mutate_all(list(~str_remove_all(., '[a-z]|='))) %>%
mutate_all(as.numeric)
lon_min_max <- ll_range[1, ] %>% as.numeric()
lat_min_max <- ll_range[2, ] %>% as.numeric()
lat_min_max
out_lon <- seq(lon_min_max[1],
lon_min_max[2],
length.out = nrow(out_matrix))
out_lon
out_lon <- seq(lon_min_max[1],
lon_min_max[2],
length.out = nrow(out_matrix))
out_lat <- seq(lat_min_max[1],
lat_min_max[2],
length.out = nrow(out_matrix))
out_matrix <- out_matrix %>%
data.frame()
out_matrix <- out_matrix %>%
data.frame() %>%
pivot_longer()
out_matrix <- out_matrix[!rows_exclude, !cols_exclude]
out_matrix <- pic.white$white_spots %>% as.matrix()
rows_exclude <- out_matrix %>% apply(1, function(x) all(x == 1))
cols_exclude <- out_matrix %>% apply(2, function(x) all(x == 1))
out_matrix <- out_matrix[!rows_exclude, !cols_exclude]
out_lon <- seq(lon_min_max[1],
lon_min_max[2],
length.out = nrow(out_matrix))
out_lat <- seq(lat_min_max[1],
lat_min_max[2],
length.out = nrow(out_matrix))
out_matrix_long <- out_matrix %>%
data.frame() %>%
pivot_longer(cols = everything())
out_matrix_long <- out_matrix %>%
data.frame() %>%
pivot_longer(cols = everything()) %>%
mutate(lon = rep(out_lon, each = nrow(out_matrix)),
lat = rep(out_lat, nrow(out_matrix)))
View(out_matrix_long)
out_matrix_long <- out_matrix %>%
data.frame() %>%
pivot_longer(cols = everything()) %>%
mutate(lon = rep(out_lon, each = nrow(out_matrix)),
lat = rep(out_lat, nrow(out_matrix))) %>%
dplyr::rename(is_white = value)
out_matrix_long <- out_matrix %>%
data.frame() %>%
pivot_longer(cols = everything()) %>%
mutate(lon = rep(out_lon, each = nrow(out_matrix)),
lat = rep(out_lat, nrow(out_matrix))) %>%
dplyr::rename(is_white = value) %>%
dplyr::select(-name)
View(out_matrix_long)
## Map
p1 <- map_terrain_14 +
theme(axis.line = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
p1
#rm(list = ls())
packages <- c("tidyverse", "ggplot2",
"stringr",
"raster", "sf", "osmdata", "ggmap",
"rstudioapi")
new.packages <- packages[!(packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
options(scipen=999)
lapply(packages, require, character.only = TRUE)
rm(packages, new.packages)
dir <- dirname(rstudioapi::getSourceEditorContext()$path)
### first define center
lon <- 36.40216900429237
lat <- 15.459321249283782
### get Google Map
library(rstudioapi)
register_google(key = "AIzaSyDJ05LLdkTl-U7tKS6H2FzS6wEEcq-YtAI")
## Note the 'style' argument excludes the labels, which are useless
map_terrain_14 <- ggmap(get_googlemap(center =
c(lon = lon, lat = lat), zoom = 14,
maptype = 'terrain',
color = 'color',
style = "feature:all|element:labels|visibility:off"))
## Map
## Axes are useless
p1 <- map_terrain_14 +
theme(axis.line = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
p1
ggsave(plot = p1, filename = paste0(dir, '/terrain_14.png'),
height = 10, width = 10)
ll_range <- attr(map_terrain_14$data, 'out.attrs')$dimnames %>%
reduce(rbind) %>%
data.frame() %>%
mutate_all(list(~str_remove_all(., '[a-z]|='))) %>%
mutate_all(as.numeric)
lon_min_max <- ll_range[1, ] %>% as.numeric()
lat_min_max <- ll_range[2, ] %>% as.numeric()
pic.raster <- raster::stack(paste0(dir, '/terrain_14.png'))
names(pic.raster)<-c('r','g','b')
## Plot
plotRGB(pic.raster)
pic.white<-pic.raster
pic.white$white_spots<-0
pic.white$white_spots[pic.white$r>250 &
pic.white$g>250 & pic.white$b>250] <- 1
plot(pic.white$white_spots)
out_matrix <- pic.white$white_spots %>% as.matrix()
rows_exclude <- out_matrix %>% apply(1, function(x) all(x == 1))
cols_exclude <- out_matrix %>% apply(2, function(x) all(x == 1))
out_matrix <- out_matrix[!rows_exclude, !cols_exclude]
out_lon <- seq(lon_min_max[1],
lon_min_max[2],
length.out = nrow(out_matrix))
out_lat <- seq(lat_min_max[1],
lat_min_max[2],
length.out = nrow(out_matrix))
out_matrix_long <- out_matrix %>%
data.frame() %>%
pivot_longer(cols = everything()) %>%
mutate(lon = rep(out_lon, each = nrow(out_matrix)),
lat = rep(out_lat, nrow(out_matrix))) %>%
dplyr::rename(is_white = value) %>%
dplyr::select(-name)
library(tidyverse)
library(lfe)
library(readxl)
library(haven)
library(haschaR)
library(sf)
library(pbapply)
library(panelView)
library(did)
library(PanelMatch)
library(lubridate)
## WD
## 98 and 99 files are the ones that make the final
haschaR::detect_wd(wd_h = "C:/Users/hanno/Dropbox/Harvard/Projects/Antonio_Hanno_Climate/",
"~/Dropbox/Antonio_Hanno_Climate")
haschaR::auto_make_runall_file("01_Code/")
## ##
rm(list = ls())
## Get data
df_qrt <- read_rds("00_data/Panel_Quarter.rds")
## fill missin
## Quarters
df_qrt %>% pull(qtr) %>% range()
##
outcomes <- c("pro_signatures",
#"con_signatures",
#"pro_petitions",
#"con_petitions",
#"solar_n_pc",
#"solar_power_pc",
#"solar_power_new_pc",
"log_pro_sig")
## Fill missings down for now
df_qrt <- df_qrt %>%
arrange()
df_qrt <- df_qrt %>%
arrange(county_id, qtr) %>%
fill(pro_signatures, log_pro_sig, .direction = 'down')
## ##
rm(list = ls())
## Get data
df_qrt <- read_rds("00_data/Panel_Quarter.rds")
## fill missin
## Quarters
df_qrt %>% pull(qtr) %>% range()
##
outcomes <- c("pro_signatures",
#"con_signatures",
#"pro_petitions",
#"con_petitions",
#"solar_n_pc",
#"solar_power_pc",
#"solar_power_new_pc",
"log_pro_sig")
## Fill missings down for now
df_qrt <- df_qrt %>%
arrange(county_id, qtr) %>%
group_by(county_id) %>%
fill(pro_signatures, log_pro_sig, .direction = 'down') %>%
ungroup()
tlist <- c("heat_first_period",
"impact_first_period",
"evac_first_period",
"any_fff_period")
df_qrt %>%
dplyr::select(qtr_num, id,
one_of(tlist)) %>%
distinct(id, .keep_all = T) %>%
pivot_longer(cols = one_of(tlist)) %>%
group_by(value, name) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(name) %>%
mutate(frac = n/sum(n),
c_frac = cumsum(frac)) %>%
filter(!value == 0) %>%
ggplot(aes(value, frac)) +
geom_line() + facet_wrap(~name) +
xlab("Quarter where treatment occurs (only for those who are ever treated)") +
ylab("Share of counties")
ggsave("03_Figures/Diagnostic/Treatment_Timing.pdf")
df_qrt %>%
dplyr::select(qtr_num, id,
one_of("pro_signatures")) %>%
group_by(qtr_num) %>%
summarise(m = mean(pro_signatures, na.rm = T)) %>%
ggplot(aes(qtr_num, m)) +
geom_line()
ggsave("03_Figures/Diagnostic/ProSig.pdf")
df_qrt %>%
dplyr::select(qtr_num, id,
one_of("log_pro_sig")) %>%
group_by(qtr_num) %>%
summarise(m = mean(log_pro_sig)) %>%
ggplot(aes(qtr_num, m)) +
geom_line()
ggsave("03_Figures/Diagnostic/ProSig_Log.pdf")
df_qrt %>%
dplyr::select(qtr_num, id,
one_of("pro_signatures")) %>%
group_by(qtr_num) %>%
summarise(s = sd(pro_signatures, na.rm = T)) %>%
ggplot(aes(qtr_num, s)) +
geom_line() +
scale_x_continuous(breaks = c(0, 25, 50, 75:100)) +
haschaR::x_axis_90deg()
ggsave("03_Figures/Diagnostic/ProSig_SD.pdf")
df_qrt$lag_log_pro_sig %>% hist()
panelView::panelView(data = df_qrt,
formula = log_pro_sig ~ heatwave,
index = c("county_id",
"qtr"))
## ##
rm(list = ls())
## Get data
df_qrt <- read_rds("00_data/Panel_Quarter.rds")
## fill missin
## ##
rm(list = ls())
## Get data
df_qrt <- read_rds("00_data/Panel_Quarter.rds")
## fill missin
## Quarters
df_qrt %>% pull(qtr) %>% range()
##
outcomes <- c("pro_signatures",
#"con_signatures",
#"pro_petitions",
#"con_petitions",
#"solar_n_pc",
#"solar_power_pc",
#"solar_power_new_pc",
"log_pro_sig")
## Fill missings down for now
df_qrt <- df_qrt %>%
arrange(county_id, qtr) %>%
group_by(county_id) %>%
fill(pro_signatures, log_pro_sig, .direction = 'down') %>%
ungroup()
tlist <- c("heat_first_period",
"impact_first_period",
"evac_first_period",
"any_fff_period")
df <- data.frame(g = rep(1:2, each = 50),
id = 1:100,
a = runif(100),
a = runif(100),
a = runif(100))
df <- data.frame(g = rep(1:2, each = 50),
id = 1:100,
a = runif(100),
b = runif(100),
c = runif(100))
df
df <- data.frame(g = rep(1:10, each = 10),
id = 1:100,
a = runif(100),
b = runif(100),
c = runif(100))
haschaR::drop_missings_df
df %>%
summarise(across(one_of(valist),
~sum(is.na(.))/n()))
varlist <- c("a", "b", "c")
varlist
df %>%
summarise(across(one_of(valist),
~sum(is.na(.))/n()))
df %>%
summarise(across(one_of(varlist),
~sum(is.na(.))/n()))
df <- data.frame(g = rep(1:10, each = 10),
id = 1:100,
a = rpois(100),
b = rpois(100),
c = rpois(100))
df <- data.frame(g = rep(1:10, each = 10),
id = 1:100,
a = rpois(100, 2),
b = rpois(100, 2),
c = rpois(100, 2)) %>%
mutate(across(c(a,b,c),
~ifelse(. == 1, NA, .)))
View(df)
varlist <- c("a", "b", "c")
df %>%
summarise(across(one_of(varlist),
~sum(is.na(.))/n()))
out <- df %>%
summarise(across(one_of(varlist),
~sum(is.na(.))/n()))
row.names(out) <- "Share missing"
out
out <- df %>%
summarise(across(one_of(varlist),
~sum(is.na(.))/n())) %>%
mutate(across(one_of(varlist),
round, 2))
row.names(out) <- "Share missing"
out
out <- df %>%
summarise(across(one_of(varlist),
~sum(is.na(.))/n())) %>%
mutate(across(one_of(varlist),
round, 1))
row.names(out) <- "Share missing"
out
group = 'g'
df[, 'gvar'] <- df[, group]
df[, 'gvar']
out <- df %>%
group_by(gvar) %>%
summarise(across(one_of(varlist),
~sum(is.na(.))/n())) %>%
mutate(across(one_of(varlist),
round, 2))
out
row.names(out) <- "Share missing"
out <- df %>%
group_by(gvar) %>%
summarise(across(one_of(varlist),
~sum(is.na(.))/n())) %>%
mutate(across(one_of(varlist),
round, 2))
out
row.names(out) <- rep("Share missing per group", each = nrow(out))
out <- df %>%
group_by(gvar) %>%
summarise(across(one_of(varlist),
~sum(is.na(.))/n())) %>%
mutate(across(one_of(varlist),
round, 2))
row.names(out) <- rep("Share missing per group", each = nrow(out))
out
check_missings_df <- function(df, varlist, group = '') {
## Non grouped
if (group == '') {
out <- df %>%
summarise(across(one_of(varlist),
~sum(is.na(.))/n())) %>%
mutate(across(one_of(varlist),
round, 2))
row.names(out) <- "Share missing"
out
} else {
df[, 'gvar'] <- df[, group]
out <- df %>%
group_by(gvar) %>%
summarise(across(one_of(varlist),
~sum(is.na(.))/n())) %>%
mutate(across(one_of(varlist),
round, 2))
row.names(out) <- rep("Share missing per group", each = nrow(out))
out
}
}
df <- data.frame(g = rep(1:10, each = 10),
id = 1:100,
a = rpois(100, 2),
b = rpois(100, 2),
c = rpois(100, 2)) %>%
mutate(across(c(a,b,c),
~ifelse(. == 1, NA, .)))
varlist <- c("a", "b", "c")
group = 'g'
check_missings_df(df, varlist, group)
check_missings_df <- function(df, varlist, group = '') {
## Non grouped
if (group == '') {
out <- df %>%
summarise(across(one_of(varlist),
~sum(is.na(.))/n())) %>%
mutate(across(one_of(varlist),
round, 2))
row.names(out) <- "Share missing"
out
} else {
df[, 'gvar'] <- df[, group]
out <- df %>%
group_by(gvar) %>%
summarise(across(one_of(varlist),
~sum(is.na(.))/n())) %>%
mutate(across(one_of(varlist),
round, 2))
out
}
}
check_missings_df(df, varlist, group)
check_missings_df(df, varlist)
library(devtools)
library(roxygen2)
rm(list = ls())
## Declare WDs
wd_h <- '/Users/hanno/Local_Projects/haschaR/'
wd_s <- '/Users/saschariaz/Google\ Drive_Harvard/Git/haschaR'
## Set WD
haschaR::detect_wd(wd_h = wd_h, wd_alt = wd_s, user_name = 'Hanno')
document()
devtools::install_github('hhilbig/haschaR',
upgrade = T, force = T, quiet = T)
